<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE glossary [
<!ENTITY % isopub PUBLIC "ISO 8879:1986//ENTITIES Publishing//EN//XML" "http://www.w3.org/2003/entities/iso8879/isopub.ent">
<!ENTITY % isonum PUBLIC "ISO 8879:1986//ENTITIES Numeric and Special Graphic//EN" "http://www.w3.org/2003/entities/iso8879/isonum.ent">
<!ENTITY % isotech PUBLIC "ISO 8879:1986//ENTITIES General Technical//EN" "http://www.w3.org/2003/entities/iso8879/isotech.ent">
%isopub;%isonum;%isotech;
<!ENTITY % myEnt SYSTEM "teco.ent">
%myEnt;
]>
 <glossary xmlns="http://docbook.org/ns/docbook" version="5.1" xml:id="GLOSS"><title>Glossary of Obscure TECO Terms</title>
 <para>
 </para><glossentry xml:id="gterm_ACCENT_GRAVE"><glossterm>Accent grave</glossterm>
 <glossdef><para>(The ` character. Echoed for TECO's text and
 command string delimiter when an ESCape surrogate
 is in effect. Actually set as the ESCape
 surrogate by the 8192 ET bit.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_ABORT_ON_ERROR_BIT"><glossterm>Abort-on-error bit</glossterm>
 <glossdef><para>(The 128's bit of the ET flag. If this bit is set,
 then TECO will abort execution on encountering an
 error (after printing the error message) and
 control returns to the operating system. This bit
 is initially set when TECO starts up, but is reset
 whenever TECO issues its prompt.)
 </para></glossdef></glossentry><glossentry xml:id="gterm__LITERAL__LT_ALTMODE___LITERAL_"><glossterm><literal>&lt;ALTMODE></literal></glossterm>
 <glossdef><para>(One of several characters that TECO treats
 specially for use as a delimiter. Known as ESCAPE
 in more recent times, but traditional TECO users
 will still go on ending their command strings with
 "ALT" "ALT".)
 </para></glossdef></glossentry><glossentry xml:id="gterm_ANCHORED_SEARCH"><glossterm>Anchored search</glossterm>
 <glossdef><para>(A search (S) or search and replace (FS) command
 that is preceded by a ::. This indicates that the
 search must match the characters immediately
 following the current pointer position. If these
 characters do not match, no further searching is
 performed and the text buffer pointer does not
 move.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_ARGUMENT_PAIR"><glossterm>Argument pair</glossterm>
 <glossdef><para>(A command of the form m,n where m and n are
 numbers (or TECO commands that return numbers).
 When used before a command that normally acts on
 lines, the argument pair causes the command to
 work on characters. The characters specified by
 this argument pair is the set of characters
 between pointer positions m and n. The number m
 should normally be less than or equal to n.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_ASCII_CODE"><glossterm>ASCII code</glossterm>
 <glossdef><para>(The American Standard Code for Information
 Interchange. The code used by TECO to represent
 characters internally. Consult Appendix A for
 details.)
 </para></glossdef></glossentry><glossentry xml:id="gterm___SIGN_MODIFIED_COMMAND"><glossterm>@-sign modified command</glossterm>
 <glossdef><para>(A command that is preceded by an @-sign modifier.)
 </para></glossdef></glossentry><glossentry xml:id="gterm___SIGN_MODIFIER"><glossterm>@-sign modifier</glossterm>
 <glossdef><para>(An at-sign (@) that proceeds a command. It
 indicates to TECO that the string argument to the
 command is to delimited on both sides by a
 user-supplied delimiter rather than to be
 delimited only at the end by a TECO-designated
 delimiter (normally <literal>&lt;ESCAPE></literal>).)
 </para></glossdef></glossentry><glossentry xml:id="gterm_AUTOMATIC_REFRESH"><glossterm>Automatic refresh</glossterm>
 <glossdef><para>(A refresh of the buffer display done when
 scrolling is active (when 7:W is non-zero) just
 before TECO issues its asterisk prompt. Automatic
 refresh can be disabled by the 128 ED bit.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_AUTOMATIC_TYPE_OUT"><glossterm>Automatic type-out</glossterm>
 <glossdef><para>(The feature of TECO that causes lines of text to
 be automatically typed out. The ES flag may be
 used to control the automatic type out of lines
 after search commands, and the EV flag may be used
 to cause automatic type out of lines after command
 execution.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_AUTO_TRACE_MODE"><glossterm>Auto-trace mode</glossterm>
 <glossdef><para>(A mode that TECO goes into when the 4's bit of the
 EH (Help-level) flag is set. In this mode, TECO
 will automatically print out the erroneous command
 string after an error occurs.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_BACKUP_PROTECTION"><glossterm>Backup protection</glossterm>
 <glossdef><para>(The process of preserving the user's original file
 (as a backup) when editing that file with the EB
 (Edit with Backup) command.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_BACKWARDS_SEARCHES"><glossterm>Backwards searches</glossterm>
 <glossdef><para>(A search that proceeds in the backwards direction.
 If the string being looked for does not occur at
 the current pointer position, the pointer position
 is moved back one character and the search is
 tried again. This continues until the string is
 found or until the boundary of the search has been
 reached or until the beginning of the current text
 buffer has been reached. Backward searches are
 initiated by using a negative argument to a search
 command or by using an argument pair m,n with m
 greater than n to an FB or FC command.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_BOUNDED_SEARCHES"><glossterm>Bounded searches</glossterm>
 <glossdef><para>(A search command that requires searching only a
 portion of the text buffer. Of particular
 importance is the case where you only want to
 search the current line for a given string.
 Bounded searches are accomplished using the FB
 command.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_CASE_FLAGGING"><glossterm>Case flagging</glossterm>
 <glossdef><para>(A mode of TECO wherein, on type out, it will flag
 alphabetic characters (in either upper or lower
 case) by preceding them with a single quote.
 Lower case flagging is particularly useful on
 terminals that do not display lower case. Case
 flagging is controlled by EU, the case flag.
 Setting EU to 0 sets lower case flagging mode;
 setting EU to 1 sets upper case flagging mode, and
 setting EU to -1 removes all case flagging.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_CHARACTER_ORIENTED_EDITOR"><glossterm>Character-oriented editor</glossterm>
 <glossdef><para>(An editor that allows modification of single
 characters, so that if just one character of a
 line is wrong, the entire line does not have to be
 retyped. TECO is a character-oriented editor
 (although it has a number of facilities for
 dealing with text lines, too).)
 </para></glossdef></glossentry><glossentry xml:id="gterm_COLON_MODIFIED_COMMAND"><glossterm>Colon-modified command</glossterm>
 <glossdef><para>(A command that is preceded by a colon (:)
 modifier.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_COLON_MODIFIER"><glossterm>Colon-modifier</glossterm>
 <glossdef><para>(A colon preceding a TECO command, used to indicate
 that the action of the command is to change.
 Frequently indicates that the command is to return
 a value (-1 if the command succeeded, 0 if the
 command failed).)
 </para></glossdef></glossentry><glossentry xml:id="gterm_COMMAND_LINE"><glossterm>Command line</glossterm>
 <glossdef><para>(The current line of the command string that is
 being typed into TECO.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_COMMAND_STRING_SCOPE_EDITING"><glossterm>Command string scope editing</glossterm>
 <glossdef><para>(The feature of TECO that is enabled when editing
 is performed on a CRT terminal. In this mode,
 typing the immediate action <literal>&lt;DELETE></literal> command
 causes the character deleted from the command
 string to physically disappear from the screen.
 Other commands, such as <literal>&lt;CTRL/U></literal> also behave
 differently, taking best advantage of the
 properties of a video terminal.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_COMMAND_STRING"><glossterm>Command string</glossterm>
 <glossdef><para>(The string of TECO commands that is currently
 being typed into TECO, or is currently being
 executed by TECO.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_COMMENT"><glossterm>Comment</glossterm>
 <glossdef><para>(An informative message used within a TECO program,
 to make the code more readable. The comment
 explains the meaning and purpose of the associated
 TECO commands. The comment is enclosed in
 exclamation marks.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_COMPILE_CLASS_COMMAND"><glossterm>Compile-class command</glossterm>
 <glossdef><para>(A set of operating systems commands (such as
 COMPILE) that causes compilation (translation) of
 a source file written in a computer language into
 machine instructions. The EG` command is useful
 to finish an editing session and re-execute the
 last compile-class command (normally a command
 that compiles the file that was just edited).)
 </para></glossdef></glossentry><glossentry xml:id="gterm_CONDITIONAL"><glossterm>Conditional</glossterm>
 <glossdef><para>(A TECO language construct used to specify code to
 be conditionally executed depending upon the
 results of some test. The most general form of
 the TECO conditional is
 n"X <literal>&lt;then-clause></literal> | <literal>&lt;else-clause></literal> '
 which tests the number n using condition X (See
 <xref linkend="COM_BRC"/> for details). The commands specified
 by the <literal>&lt;then-clause></literal> are executed if the condition
 succeeds, otherwise the commands specified by the
 <literal>&lt;else-clause></literal> are executed.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_CONTROL_CHARACTER"><glossterm>Control-character</glossterm>
 <glossdef><para>(An ASCII character whose octal code is in the
 range 0-37. Usually denoted in this manual by
 <literal>&lt;CTRL/X></literal> where X is the character whose ASCII code
 is 100 (octal) greater than the ASCII code for the
 control character being represented. TECO
 displays such a character as ^X (Caret-X) except
 for <literal>&lt;TAB></literal>, <literal>&lt;LF></literal>, <literal>&lt;VT></literal>,
 <literal>&lt;FF></literal>, and <literal>&lt;CR></literal> which have
 their normal display, and <literal>&lt;ESC></literal> which is displayed
 as $ (dollar sign) or, if a user-designated ESCAPE
 surrogate is in effect, as ` (accent grave).
 Anytime a single control-character, <literal>&lt;CTRL/X></literal> is a
 valid TECO command, the two-character sequence,
 ^X, may be used instead.)
 </para></glossdef></glossentry><glossentry xml:id="gterm__LITERAL__LT_CTRL_C___LITERAL__TRAPPING"><glossterm><literal>&lt;CTRL/C></literal> trapping</glossterm>
 <glossdef><para>(A mode of operation wherein a TECO macro will
 regain control (rather than TECO) when <literal>&lt;CTRL/C></literal> or
 <literal>&lt;CTRL/C></literal><literal>&lt;CTRL/C></literal> is typed on the user's terminal
 to abort execution of the current command string.
 <literal>&lt;CTRL/C></literal> trapping is enabled by setting the
 high-order bit of the ET flag.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_CURRENT_CHARACTER"><glossterm>Current character</glossterm>
 <glossdef><para>(The character immediately following the current
 text buffer pointer position.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_CURSOR"><glossterm>Cursor</glossterm>
 <glossdef><para>(A visible pattern on a CRT terminal (usually
 blinking) that would specify to a true scope
 editor (like VTEDIT) the current location of the
 text buffer pointer, or which would specify the
 location where subsequently typed characters would
 be displayed.)
 </para></glossdef></glossentry><glossentry xml:id="gterm__LITERAL__LT_DELIM___LITERAL_"><glossterm><literal>&lt;DELIM></literal></glossterm>
 <glossdef><para>(Terminology in this manual for an ESCape typed at
 the terminal and passed to TECO. On newer
 terminals, there may be no ESCape key. Some
 versions of TECO provide for an "ESCape
 surrogate", a user-designated key which is to
 cause transmission of an ESCape to TECO. The term
 <literal>&lt;DELIM></literal> is used to indicate an ESCape transmitted
 to TECO whether it was generated by the designated
 "surrogate" key or by a "real" ESCape key. An
 ESCape types out as ` when a surrogate is active,
 but as $ when no surrogate is active.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_DESTRUCTIVE_SEARCH"><glossterm>Destructive search</glossterm>
 <glossdef><para>(A form of global search in which pages of text
 that are passed over (because they did not contain
 the string being searched for) are discarded
 rather than written to the output file.
 Destructive searches are initiated in TECO via use
 of the _ command.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_DISPLAY_EDITOR"><glossterm>Display editor</glossterm>
 <glossdef><para>(A true display editor is on which makes efficent
 use of a CRT terminal or display scope. Such an
 editor maintains a "window" into the text being
 edited. As characters are typed on the terminal,
 these characters immediately are entered into the
 text buffer and the window is immediately updated
 to reflect this change. With the help of some
 macro support, TECO can be made to be a true
 display editor. A more modest use of a CRT
 terminal (and which requires no macro support) is
 scrolling, q.v.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_DOT"><glossterm>Dot</glossterm>
 <glossdef><para>(A mnemonic for "the current text buffer pointer
 position". Stems from the fact that the . (dot,
 or period) TECO command returns this number as its
 value.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_E_COMMAND"><glossterm>E command</glossterm>
 <glossdef><para>(One of several two-character TECO commands that
 start with the letter 'E'.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_ECHO_MODE"><glossterm>Echo mode</glossterm>
 <glossdef><para>(A normal mode of operation in which TECO will
 automatically echo (display) each character that
 is typed in response to a ^T command. Opposite of
 no-echo mode. This mode is controlled by the 8's
 bit of the ET flag. (0 means no-echo mode.))
 </para></glossdef></glossentry><glossentry xml:id="gterm_ED_FLAG"><glossterm>ED flag</glossterm>
 <glossdef><para>(The edit level flag.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_EDIT_CLASS_COMMAND"><glossterm>Edit-class command</glossterm>
 <glossdef><para>(A type of operating system command (such as MAKE
 and TECO) that specifies that file editing is to
 occur. Many operating systems remember the
 argument specified with the last Edit-class
 command, so that the next time an edit-class
 command is used without an argument, the previous
 argument can be recalled.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_EDIT_LEVEL_FLAG"><glossterm>Edit level flag</glossterm>
 <glossdef><para>(A bit-encoded flag, referenced by the ED command,
 that describes how TECO should behave with
 reference to certain features. See <xref linkend="COM_MCF"/>
 for more details.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_EDIT_VERIFY_FLAG"><glossterm>Edit verify flag</glossterm>
 <glossdef><para>(A flag that describes how TECO should act after
 processing of a command string. This flag can be
 set so that TECO will display the line just edited
 on the terminal after each command. See <xref linkend="COM_MCF"/>
 for more details.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_EH_FLAG_THE_HELP_LEVEL_FLAG_"><glossterm>EH flag The help level flag.</glossterm>
 <glossdef><para>(
 Either-case search mode
 A standard mode of operation in which alphabetic
 characters specified within a search string are
 permitted to match a corresponding character of
 either upper or lower case.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_ELSE_CLAUSE"><glossterm>Else-clause</glossterm>
 <glossdef><para>(The part of a conditional command that is executed
 if the condition is not satisfied. In TECO, these
 are the commands that occur between the | and the
 ' characters within the conditional construct.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_END_OF_FILE_FLAG"><glossterm>End-of-file flag</glossterm>
 <glossdef><para>(A read-only flag, referenced by the ^N command
 that specifies whether or not end-of-file has been
 seen on the currently selected input stream. A
 value of 0 means that end-of-file has not been
 seen; a value of -1 means that end-of-file has
 been reached. This flag is initially 0 and is
 reset to 0 each time a new file is selected for
 input.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_EO_LEVEL"><glossterm>EO level</glossterm>
 <glossdef><para>(The current version level of TECO-10.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_ES_FLAG"><glossterm>ES flag</glossterm>
 <glossdef><para>(The search verification flag.)
 </para></glossdef></glossentry><glossentry xml:id="gterm__LITERAL__LT_ESCAPE___LITERAL_"><glossterm><literal>&lt;ESCAPE></literal></glossterm>
 <glossdef><para>(The character whose ASCII code is 33 (octal). It
 is a general-purpose delimiter used by TECO.
 Traditionally known as an <literal>&lt;ALTMODE></literal>. When no
 ESCape surrogate is active, an ESCape types out as
 $ (dollar sign). See also <literal>&lt;DELIM></literal>.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_ESCAPE_SURROGATE"><glossterm>ESCape surrogate</glossterm>
 <glossdef><para>(A character (designated via the 8192 ET bit, or
 via the EE flag) which causes an ESCape to be
 transmitted to TECO. When an ESCape surrogate is
 active, an ESCape types out as ` (accent grave).
 See also <literal>&lt;DELIM></literal>.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_ET_FLAG"><glossterm>ET flag</glossterm>
 <glossdef><para>(The terminal characteristics flag)
 </para></glossdef></glossentry><glossentry xml:id="gterm_EU_FLAG"><glossterm>EU flag</glossterm>
 <glossdef><para>(The upper/lower case flag.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_EV_FLAG"><glossterm>EV flag</glossterm>
 <glossdef><para>(The edit verify flag.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_EXACT_CASE_SEARCH_MODE"><glossterm>Exact-case search mode</glossterm>
 <glossdef><para>(A mode of operation in which alphabetic characters
 within a search string must match the exact case
 (upper case or lower case) of characters
 specified.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_EXIT_PROTECTION"><glossterm>Exit Protection</glossterm>
 <glossdef><para>(A protective feature of TECO that prevents a user
 from exiting TECO if a potential los of data is
 imminent. The EX and EG commands are aborted
 (with the ?NFO error message) if there is text in
 the text buffer, but no output file is open.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_F_COMMAND"><glossterm>F command</glossterm>
 <glossdef><para>(One of several two-character TECO commands that
 start with the letter 'F'.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_FLAG"><glossterm>Flag</glossterm>
 <glossdef><para>(A data register used by TECO to control various
 modes of operation. The contents of the flag are
 set by specifying the new value before the flag
 name; and the contents are returned by using the
 flag name without a numeric argument. The TECO
 flags are: ^X, ^E, ^N, ED, EE, EH, EO, ES, ET,
 EU, and EV.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_FLOW_COMMAND"><glossterm>Flow command</glossterm>
 <glossdef><para>(A TECO-11 command that is used to flow (branch) to
 a particular flow control character. The flow
 commands are F&lt;, F>, F', and F|.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_FORM_FEED_FLAG"><glossterm>Form feed flag</glossterm>
 <glossdef><para>(A read-only flag, referenced by the ^E command
 that specifies whether the previous append from
 the input file terminated because of encountering
 a form feed character in the input file, or
 because the text buffer became nearly full. The
 value of this flag is automatically set to -1 by
 TECO if input is terminated by the presence of a
 form feed character in the input file.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_GARBAGE_COLLECTION"><glossterm>Garbage collection</glossterm>
 <glossdef><para>(A process used by TECO-10 to collect unused memory
 when more memory is required.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_GLOBAL_Q_REGISTER"><glossterm>Global Q-register</glossterm>
 <glossdef><para>(A Q-register available throughout all macro levels
 (including "outside", or at prompt level). Global
 Q-registers are named A-Z and 0-9. See also Local
 Q-Registers, and <xref linkend="CON_DAT_QRG"/>.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_GLOBAL_SEARCH"><glossterm>Global search</glossterm>
 <glossdef><para>(A type of search that continues through the entire
 input file until the specified characters are
 found. Successive pages of the file are read into
 the text buffer and then written out into the
 output file (if the string is not located).
 Global searches in TECO are initiated via the N
 command.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_HARD_COPY_EDITING_MODE"><glossterm>Hard-copy editing mode</glossterm>
 <glossdef><para>(A mode of operation that TECO uses when the user's
 terminal is not a CRT. In this mode, when a
 character is rubbed out using the <literal>&lt;DELETE></literal> key,
 the rubbed-out character is re-typed on the
 terminal as a visible indication that this
 character was rubbed out. Opposite of scope
 editing mode. This mode can be entered, even on a
 scope terminal, by turning off the 2's bit of the
 ET flag.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_HELP_LEVEL_FLAG"><glossterm>Help level flag</glossterm>
 <glossdef><para>(A bit-encoded flag, referenced by the EH command,
 that controls properties of TECO having to do with
 error messages and user assistance.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_IMMEDIATE_COMMAND"><glossterm>Immediate command</glossterm>
 <glossdef><para>(A special command to TECO that takes immediate
 effect, requiring no <literal>&lt;DELIM></literal>s to begin its
 execution.)
 </para></glossdef></glossentry><glossentry xml:id="gterm__IMMEDIATE_ACTION_EDITING_CHARACTERS_"><glossterm>"Immediate action editing characters"</glossterm>
 <glossdef><para>(are commands
 such as <literal>&lt;DELETE></literal> and <literal>&lt;CTRL/U></literal>, which perform
 editing of the TECO command string currently being
 typed in. See <xref linkend="CSE_IAEC"/>.)
 </para></glossdef></glossentry><glossentry xml:id="gterm__IMMEDIATE_INSPECTION_COMMANDS_"><glossterm>"Immediate inspection commands"</glossterm>
 <glossdef><para>(are single-character commands which can be typed as the
 very first character after TECO's prompting
 asterisk, and which cause the current location
 counter to be moved by one line and the new
 current line to be typed out. Examples are <literal>&lt;LF></literal>
 and <literal>&lt;BS></literal>. See <xref linkend="BAS_TOC_IIC"/>.)
 </para></glossdef></glossentry><glossentry xml:id="gterm__IMMEDIATE_ACTION_COMMANDS_"><glossterm>"Immediate action commands"</glossterm>
 <glossdef><para>(are other commands
 which may be typed right after TECO's prompting
 asterisk, such as the &star;q to save the
 previously-typed command in a Q-register or the ^W
 to re-display a scrolling buffer window. See
 <xref linkend="CSE_IAC"/>.)
 </para></glossdef></glossentry><glossentry xml:id="gterm__IMMEDIATE_ESCAPE_SEQUENCE_COMMANDS_"><glossterm>"Immediate ESCape sequence commands"</glossterm>
 <glossdef><para>(are invoked
 by keys which generate escape sequences, such as
 "arrow" or "auxiliary keypad" keys. See <xref linkend="CSE_IESC"/>.
 Such commands are usually used to perform
 editing of the TECO command string currently being
 entered into TECO. For example, the commands
 <literal>&lt;DELETE></literal> and <literal>&lt;CTRL/U></literal> are immediate action
 commands.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_ITERATION"><glossterm>Iteration</glossterm>
 <glossdef><para>(A language construct that permits a sequence of
 operations to be re-executed indefinitely or a
 given number of times. In TECO, this is
 accomplished by enclosing the commands in angle
 brackets.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_KERNEL"><glossterm>Kernel</glossterm>
 <glossdef><para>(The TECO-11 kernel refers to the TECO-11 module
 that implements all those features of TECO-11 that
 are common to all PDP-11 operating systems.
 Operating system specific features and the
 interface to the operating system is accomplished
 by linking an I/O module tailored for the desired
 operating system with the kernel.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_KEYPAD_EDITOR"><glossterm>Keypad editor</glossterm>
 <glossdef><para>(A true scope editor that uses special keys on the
 terminal (such as a VT52 or VT100) to control
 editing functions. VTEDIT is an example of a
 keypad editor.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_LINE"><glossterm>Line</glossterm>
 <glossdef><para>(A portion of text delimited by <literal>&lt;LF></literal>, <literal>&lt;VT></literal>,
 <literal>&lt;FF></literal>, or the beginning or end of the text buffer. The
 final delimiter is considered to be part of the
 line.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_LINE_NUMBERED_FILE"><glossterm>Line-numbered file</glossterm>
 <glossdef><para>(In TOPS-10, an ASCII file that contains line
 numbers embedded in the start of each line. TECO
 does not require these line numbers, but can
 handle them if they are present. They can also be
 generated or suppressed via the /GENLSN and
 /SUPLSN switches respectively.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_LINE_ORIENTED_EDITOR"><glossterm>Line-oriented editor</glossterm>
 <glossdef><para>(An editor that primarily uses line numbers to
 direct editing, and most of whose commands are
 line-oriented. TECO is a character-oriented
 editor, but also has many facilities that work
 with lines.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_"><glossterm></glossterm>
 <glossdef><para>(Line-wrap mode
 A standard mode of TECO's window support wherein
 lines that are too long to fit on a single
 physical line of the user's terminal are
 automatically continued on the next line.
 Opposite of truncate mode.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_LITERAL_TYPE_OUT_MODE"><glossterm>Literal type-out mode</glossterm>
 <glossdef><para>(A mode that TECO can be put into by setting the
 1's bit in the ET flag, or (for a single character
 on a one-shot basis) by using the :^T command. In
 this mode, any characters typed by a TECO program
 via use of one of the commands T, V, ^A, or :G,
 will be displayed on the user's terminal without
 any modification. When not in this mode, TECO
 will convert characters that normally do not print
 to a form that can be displayed on the user's
 terminal (e.g. <literal>&lt;CTRL/X></literal> displays as ^X and
 <literal>&lt;ESCAPE></literal> displays as $ or, if a user-designated
 ESCAPE surrogate is in effect, as `). Literal
 type out mode is useful when trying to do
 real-time displays on a CRT terminal. Normal
 (up-arrow) mode is particularly useful to let you
 see what characters are really in your file.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_LOCAL_Q_REGISTER"><glossterm>Local Q-register</glossterm>
 <glossdef><para>(A Q-register available to only a single macro
 level (including "outside", or at prompt level).
 The local Q-registers for a particular macro level
 are automatically saved and restored by TECO
 around execution of a lower-level macro. Local
 Q-registers are named .A-.Z and .0-.9. See also
 Global Q-Registers, and <xref linkend="CON_DAT_QRG"/>.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_LOG_FILE"><glossterm>Log file</glossterm>
 <glossdef><para>(An audit trail that TECO-10 can keep showing all
 the commands that were typed to TECO and/or all
 the type out made by TECO. This is useful for
 reviewing what went wrong with a 'bad' edit. The
 log file is initiated with the EL command (see
 <xref linkend="APP_INC"/>).)
 </para></glossdef></glossentry><glossentry xml:id="gterm_MACRO"><glossterm>Macro</glossterm>
 <glossdef><para>(A sequence of TECO commands intended to be loaded
 into a Q-register and executed as a TECO program.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_MACRO_LEVEL"><glossterm>Macro level</glossterm>
 <glossdef><para>(Two commands within the same TECO macro are said
 to be at the same macro level. When one TECO
 macro calls another, the calling macro is said to
 be at the higher macro level, and the called macro
 at the lower macro level.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_MATCH_CONTROL_CONSTRUCT"><glossterm>Match control construct</glossterm>
 <glossdef><para>(A command, consisting of certain special
 characters, used within a search string to
 indicate to TECO that special groups of characters
 are permitted to match at this point.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_MEMORY_EXPANSION"><glossterm>Memory expansion</glossterm>
 <glossdef><para>(TECO's act of acquiring additional storage from
 the operating system when the currently allocated
 storage is insufficient to handle the current TECO
 command. Typically, TECO will attempt to acquire
 this additional memory before it completely runs
 out of memory, so as to allow a 'buffer zone' for
 the user. This allows him to complete a few more
 commands even in the case where TECO is unable to
 get more memory. The informative message "[nK
 Bytes]" or its equivalent is printed on the
 terminal informing the user that memory usage has
 expanded.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_MUNG"><glossterm>Mung</glossterm>
 <glossdef><para>(A recursive acronym for "Mung Until No Good"; an
 act applied by novice TECO users to their source
 files.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_MUNG_COMMAND"><glossterm>MUNG command</glossterm>
 <glossdef><para>(An operating system command used to invoke a
 pre-written TECO program. The most general form
 of this command is "MUNG file,data" where "file"
 is the name of a TECO source program, and "data"
 is data to be passed to that program.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_NO_ECHO_MODE"><glossterm>No-echo mode</glossterm>
 <glossdef><para>(A mode of operation in which TECO will not
 automatically echo (display) the character typed
 by the user in response to the ^T command. This
 mode is entered by setting the 8's bit of the ET
 flag. Opposite of echo mode.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_PAGE"><glossterm>Page</glossterm>
 <glossdef><para>(A portion of text delimited by form feeds. The
 form feeds are not considered to be part of the
 page. Sometimes the term 'page' is used to refer
 to all the text currently in the text buffer.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_PANIC_MODE"><glossterm>Panic Mode</glossterm>
 <glossdef><para>(A condition that occurs (on small, single-user
 operating systems), when, in the middle of
 outputting during an edit, the output device fills
 up so that the I/O transfer cannot continue. TECO
 recovers gracefully from this condition by
 printing the ?FUL error message and returning
 control to TECO without any loss of data. At this
 point, the user closes the current output file and
 opens another one on another device (with more
 room) and resumes editing. At a subsequent time,
 the two parts of his file can be concatenated back
 together.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_PIPELINE_EDITOR"><glossterm>Pipeline editor</glossterm>
 <glossdef><para>(An editor which only makes sequential edits to a
 file. The file to be edited is read into the text
 buffer one piece at a time. Each piece is edited
 and then written out. Once a piece has been
 written out, further editing to that piece is not
 possible unless the output file is re-opened in a
 later edit as a new file to be edited. TECOs are
 pipeline editors, with the exception of TECO-11 on
 VAX/VMS (which offers the capability to page
 backwards as well as forward).)
 </para></glossdef></glossentry><glossentry xml:id="gterm_POINTER_PRESERVATION_MODE"><glossterm>Pointer preservation mode</glossterm>
 <glossdef><para>(A mode of operation in which the text buffer
 pointer will not change after a failing search.
 This mode is controlled by the 16's bit of the ED
 flag.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_PRIMARY_INPUT_STREAM"><glossterm>Primary input stream</glossterm>
 <glossdef><para>(A term used by TECO-11 to refer to the main input
 file that TECO is using.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_PRIMARY_OUTPUT_STREAM"><glossterm>Primary output stream</glossterm>
 <glossdef><para>(A term used by TECO-11 to refer to the main output
 file that TECO is using.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_PROMPT_LEVEL"><glossterm>Prompt level</glossterm>
 <glossdef><para>(A TECO command is said to be executed from prompt
 level if it was typed in directly in response to
 TECO's prompt, as opposed to being executed from a
 macro.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_Q_REGISTER"><glossterm>Q-register</glossterm>
 <glossdef><para>(One of 36 global or 36 local user-accessible
 registers provided by TECO. Each Q-register can
 hold both a number and a string of text. Of
 particular importance is the ability to store TECO
 command strings in Q-registers to be used as
 "macros".)
 </para></glossdef></glossentry><glossentry xml:id="gterm_Q_REGISTER_PUSH_DOWN_LIST"><glossterm>Q-register push down list</glossterm>
 <glossdef><para>(A last-in first-out stack available to users for
 saving and restoring the contents of Q-registers.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_READ_WITH_NO_WAIT_MODE"><glossterm>Read-with-no-wait mode</glossterm>
 <glossdef><para>(A mode of operation in which the ^T command will
 not hang until a key is typed on the user's
 terminal. In this mode, if no key has been
 struck, TECO returns a -1 as the value of the ^T
 command. This mode is entered by setting the 32's
 bit of the ET flag.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_SCROLLING"><glossterm>Scrolling</glossterm>
 <glossdef><para>(A form of TECO operation available on CRT
 terminals capable of supporting split-screen
 operation. The bottom n lines are used for TECO's
 asterisk prompt and the usual typed command lines;
 the remaining lines above are used for an
 automatically-updated window into the text buffer.
 A valuable training aid: one can experiment with
 TECO commands and immediately observe their
 effects. Not a bad idea for advanced users,
 either. Controlled by the n,7:W command.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_SEALL_MODE"><glossterm>SEALL mode</glossterm>
 <glossdef><para>(A mode of window operation in which all characters
 have a distinctive visible display, including
 characters such as <literal>&lt;TAB></literal>, <literal>&lt;CR></literal>, and <literal>&lt;LF></literal>,
 which normally do not print. Controlled by the 3:W flag
 (see <xref linkend="COM_SCO"/>). Also known as "View all"
 mode.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_SEARCH_VERIFICATION_FLAG"><glossterm>Search verification flag</glossterm>
 <glossdef><para>(A flag, referenced by the ES command, that
 controls the action of TECO subsequent to the
 execution of a command string containg a search
 command. Proper setting of this flag will enable
 the user to verify that the search located the
 correct string, by having the line containing the
 string found displayed on the terminal. See
 <xref linkend="COM_MCF"/> for more details.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_SEARCH_MODE_FLAG"><glossterm>Search mode flag</glossterm>
 <glossdef><para>(A flag, referenced by the ^X command, that
 controls how TECO treats alphabetical characters
 within search strings. This flag is used to put
 TECO into either exact-case mode, or either-case
 mode. If the ^X flag is set to 0, then either
 case matches in searches. If the ^X flag is set
 to 1, then exact case matches are required.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_SECONDARY_INPUT_STREAM"><glossterm>Secondary input stream</glossterm>
 <glossdef><para>(A term used by TECO-11 to refer to an auxiliary
 input "channel" that was formed by use of the EP
 command.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_SECONDARY_OUTPUT_STREAM"><glossterm>Secondary output stream</glossterm>
 <glossdef><para>(A term used by TECO-11 to refer to an auxiliary
 output "channel" that was formed by use of the EA
 command. See <xref linkend="COM_FSC_SSC"/> for details.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_SCOPE_EDITING_MODE"><glossterm>Scope editing mode</glossterm>
 <glossdef><para>(A mode of TECO in which command line scope editing
 (q.v.) algorithms are used. This mode is enabled
 by setting the 2's bit of the ET flag. It is
 usually automatically enabled by TECO if the
 operating system can detect that the user has
 invoked TECO from a scope terminal. Opposite of
 hard-copy editing mode.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_SPLIT_Q_REGISTERS"><glossterm>Split Q-registers</glossterm>
 <glossdef><para>(The feature of TECO that permits storing of both a
 number and a string within a Q-register. Each
 Q-register can be considered to consist of two
 compartments.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_STRING_BUILD_CONSTRUCT"><glossterm>String build construct</glossterm>
 <glossdef><para>(A command, consisting of special characters, used
 within a text argument to build up the contents of
 the text argument from other components.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_SUPER_TECO_MODE"><glossterm>SUPER TECO mode</glossterm>
 <glossdef><para>(A mode of TECO-8 wherein TECO will read past the
 end-of-file mark (CTRL/Z) of a sequential ASCII
 file. This mode is enabled by using the /S switch
 on an ER or EB command and is terminated when an
 ER or EB command is issued with no /S switch.
 This mode is useful for scanning through mass
 storage devices in an attempt to recover data from
 files that had previously been deleted.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_SWITCH"><glossterm>Switch</glossterm>
 <glossdef><para>(A construct of the form /SWITCH used within a
 command that takes a filespecification, to modify
 the action of the command or attributes of the
 file specified. Also known as a qualifier.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TAG"><glossterm>Tag</glossterm>
 <glossdef><para>(A label specified within exclamation marks to mark
 a point within a TECO program. Control can be
 transferred to this point by the use of a GOTO
 (Otag`) command.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TECO"><glossterm>TECO</glossterm>
 <glossdef><para>(Text Editor and COrrector program.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TECO_INI"><glossterm>TECO.INI</glossterm>
 <glossdef><para>(A file containing TECO commands that is used as a
 user's private initialization file. When TECO
 starts up, it looks for such a file in the user's
 area, and if it finds one, the TECO commands in
 this file are executed before editing commences.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TECO_TEC"><glossterm>TECO.TEC</glossterm>
 <glossdef><para>(A TECO macro used by many operating systems to
 parse the user's edit-class commands.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TECO_I_O_MODE"><glossterm>TECO I/O mode</glossterm>
 <glossdef><para>(A mode of I/O operation under the RSTS/E and
 RSX-11 operating systems, in which the system
 buffers most characters and returns control to the
 caller (usually TECO) only when interesting
 characters (such as <literal>&lt;DELETE></literal>, <literal>&lt;DELIM></literal>, etc.) are
 typed.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TECO_S_PROMPT"><glossterm>TECO's prompt</glossterm>
 <glossdef><para>(Refers to the asterisk (&star;) that TECO prints to
 indicate that it is ready to accept commands.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TECO_SIG"><glossterm>TECO SIG</glossterm>
 <glossdef><para>(A DECUS Special Interest Group, consisting of
 users who are dedicated to the spread of,
 improvement of, and standardization of TECO.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TERMINAL_CHARACTERISTICS_FLAG"><glossterm>Terminal characteristics flag</glossterm>
 <glossdef><para>(A bit-encoded flag, referenced via the ET command,
 that contains information about the user's terminal
 terminal and specifies in what manner TECO should
 support it.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TEXT_BUFFER"><glossterm>Text buffer</glossterm>
 <glossdef><para>(The main buffer used by TECO to hold the text to
 be edited.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TEXT_BUFFER_POINTER"><glossterm>Text buffer pointer</glossterm>
 <glossdef><para>(A pointer that marks the position within the text
 buffer where TECO is currently 'at'. This pointer
 always points to positions between characters; it
 never points at a character. The current
 character is considred to be the character
 immediately to the right of the current position
 of the text buffer pointer.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_THEN_CLAUSE"><glossterm>Then-clause</glossterm>
 <glossdef><para>(The set of commands within a conditional that are
 executed if the condition is satisfied. In TECO,
 these commands immediately follow the "X at the
 start of the conditional. They are terminated by
 a | or ' character.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TRACING"><glossterm>Tracing</glossterm>
 <glossdef><para>(The act of watching the command-by-command
 execution of a TECO program. This is accomplished
 by putting TECO into trace mode, via use of the ?
 command.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TRACE_MODE"><glossterm>Trace mode</glossterm>
 <glossdef><para>(A mode of TECO wherein each command that is
 executed by TECO is also displayed on the user's
 terminal as it is being executed. This mode is
 useful for debugging complicated TECO programs.
 TECO is toggled in and out of this mode via use of
 the ? command. See <xref linkend="COM_AID_TRC"/> for more
 details.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TRUNCATE_MODE"><glossterm>Truncate mode</glossterm>
 <glossdef><para>(A mode of TECO's window support wherein lines that
 are too long to fit on a single physical line of
 the user's terminal are truncated when the right
 margin of the scope is encountered. This mode is
 entered by setting the 256's bit in the ET flag.
 Opposite of line-wrap mode.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_TYPE_OUT_TIME_COMMAND"><glossterm>Type-out-time command</glossterm>
 <glossdef><para>(A special command that makes sense only while TECO
 is typing out text on the terminal. These
 commands are <literal>&lt;CTRL/S></literal>, <literal>&lt;CTRL/Q></literal>,
 and <literal>&lt;CTRL/O></literal> and affect the type out.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_UP_ARROW_MODE"><glossterm>Up-arrow mode</glossterm>
 <glossdef><para>(A standard mode of operation wherein upon type
 out, TECO will display control characters by
 typing the visible two-character sequence ^X to
 represent the control character <literal>&lt;CTRL/X></literal>. On many
 older terminals, the caret character (^), whose
 octal ASCII code is 136, prints as an up-arrow.
 Some control characters are not printed in
 up-arrow mode, notably <literal>&lt;TAB></literal>, <literal>&lt;LF></literal>,
 <literal>&lt;VT></literal>, <literal>&lt;FF></literal>, and <literal>&lt;CR></literal>.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_UPPER_LOWER_CASE_FLAG"><glossterm>Upper/lower case flag</glossterm>
 <glossdef><para>(A flag, referenced by the EU command, that
 specifies whether or not case flagging is to
 occur. If set to -1, no case flagging occurs. If
 set to 0, lower case characters are flagged on
 type out. If set to +1, upper case characters are
 flagged on type out.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_VIEW_ALL_MODE"><glossterm>View all mode</glossterm>
 <glossdef><para>(A mode of window operation in which all characters
 have a distinctive visible display, including
 characters such as <literal>&lt;TAB></literal>, <literal>&lt;CR></literal>, and <literal>&lt;LF></literal>,
 which normally do not print. Controlled by the 3:W flag
 (see <xref linkend="COM_SCO"/>). Also known as SEALL mode.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_WAR_AND_PEACE_MODE"><glossterm>War and Peace mode</glossterm>
 <glossdef><para>(A mode of operation in which TECO outputs a large
 informative paragraph of information automatically
 upon encountering an error in a user's program.
 This paragraph of information describes the error
 in painstaking detail and tells the user how to
 recover. This mode is entered by setting the help
 level to 3. This mode is particularly useful to
 Novices and particularly obnoxious to experts.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_WINDOW"><glossterm>Window</glossterm>
 <glossdef><para>(The portion of the text buffer that is currently
 being displayed on the user's terminal or
 auxiliary display device.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_WINDOW_SUPPORT"><glossterm>Window support</glossterm>
 <glossdef><para>(Assembly language code, built into TECO, that
 maintains a window into the text buffer on the
 user's terminal or auxiliary display device.)
 </para></glossdef></glossentry><glossentry xml:id="gterm_YANK_PROTECTION"><glossterm>Yank protection</glossterm>
 <glossdef><para>(A feature of TECO wherein any Y, _, or F_ command
 that will potentially destroy valid data is
 aborted. This mode is normally enabled and will
 cause any of the aforementioned commands to abort
 with the ?YCA error message if there is text in
 the text buffer and an output file is open. This
 feature can be disabled by turning off the 2's bit
 in the ED flag.)
 </para></glossdef></glossentry></glossary>
